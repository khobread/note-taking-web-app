{"ast":null,"code":"var _jsxFileName = \"/Users/kevinlee/Desktop/DEV/playbook-note-app/react-notes-app/src/components/NotesList.js\",\n    _s = $RefreshSig$();\n\nimport Note from './Note';\nimport AddNote from './AddNote';\nimport { Grid } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotesList = ({\n  notes,\n  handleAddNote,\n  handleDeleteNote,\n  switchNotes\n}) => {\n  _s();\n\n  const [firstMove, setFirstMove] = useState(null);\n\n  function updateMovingNote(id) {\n    if (firstMove === null) {\n      setFirstMove(id);\n    } else if (id === firstMove) {\n      setFirstMove(null);\n    } else {\n      switchNotes(firstMove, id);\n      setFirstMove(null);\n      setHighlight(\"Not highlighted\");\n    }\n\n    ;\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [notes.map(note => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 2,\n      children: /*#__PURE__*/_jsxDEV(Note, {\n        id: note.id,\n        text: note.text,\n        handleDeleteNote: handleDeleteNote,\n        updateMovingNote: updateMovingNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)), notes.length < 36 ? /*#__PURE__*/_jsxDEV(AddNote, {\n      handleAddNote: handleAddNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n};\n\n_s(NotesList, \"Ad5GKdwt5l6/+P60FjrJNZe6U4c=\");\n\n_c = NotesList;\nexport default NotesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotesList\");","map":{"version":3,"sources":["/Users/kevinlee/Desktop/DEV/playbook-note-app/react-notes-app/src/components/NotesList.js"],"names":["Note","AddNote","Grid","React","useState","NotesList","notes","handleAddNote","handleDeleteNote","switchNotes","firstMove","setFirstMove","updateMovingNote","id","setHighlight","map","note","text","length"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,aAAT;AAAwBC,EAAAA,gBAAxB;AAA0CC,EAAAA;AAA1C,CAAD,KAA6D;AAAA;;AAE9E,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA6BP,QAAQ,CAAC,IAAD,CAA3C;;AAEA,WAASQ,gBAAT,CAA0BC,EAA1B,EAA8B;AAC7B,QAAIH,SAAS,KAAK,IAAlB,EAAwB;AACvBC,MAAAA,YAAY,CAACE,EAAD,CAAZ;AACA,KAFD,MAEO,IAAIA,EAAE,KAAKH,SAAX,EAAsB;AAC5BC,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,KAFM,MAEA;AACNF,MAAAA,WAAW,CAACC,SAAD,EAAYG,EAAZ,CAAX;AACAF,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAG,MAAAA,YAAY,CAAC,iBAAD,CAAZ;AACA;;AAAA;AACD;;AAAA;AAED,sBACC,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA,eACER,KAAK,CAACS,GAAN,CAAWC,IAAD,iBACV,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA,6BACC,QAAC,IAAD;AACC,QAAA,EAAE,EAAEA,IAAI,CAACH,EADV;AAEC,QAAA,IAAI,EAAEG,IAAI,CAACC,IAFZ;AAGC,QAAA,gBAAgB,EAAET,gBAHnB;AAIC,QAAA,gBAAgB,EAAEI;AAJnB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADA,CADF,EAWEN,KAAK,CAACY,MAAN,GAAe,EAAf,gBAAoB,QAAC,OAAD;AAAS,MAAA,aAAa,EAAEX;AAAxB;AAAA;AAAA;AAAA;AAAA,YAApB,GAAgE,IAXlE;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAeA,CA/BD;;GAAMF,S;;KAAAA,S;AAiCN,eAAeA,SAAf","sourcesContent":["import Note from './Note';\nimport AddNote from './AddNote';\nimport { Grid } from '@material-ui/core';\nimport React, { useState } from 'react';\n\nconst NotesList = ({ notes, handleAddNote, handleDeleteNote, switchNotes }) => {\n\n\tconst [ firstMove, setFirstMove] = useState(null);\n\n\tfunction updateMovingNote(id) { \n\t\tif (firstMove === null) {\n\t\t\tsetFirstMove(id);\n\t\t} else if (id === firstMove) {\n\t\t\tsetFirstMove(null);\n\t\t} else {\n\t\t\tswitchNotes(firstMove, id);\n\t\t\tsetFirstMove(null);\n\t\t\tsetHighlight(\"Not highlighted\");\n\t\t};\n\t};\n\n\treturn (\n\t\t<Grid container spacing={2}>\n\t\t\t{notes.map((note) => (\n\t\t\t\t<Grid item xs={2}>\n\t\t\t\t\t<Note  \n\t\t\t\t\t\tid={note.id}\n\t\t\t\t\t\ttext={note.text}\n\t\t\t\t\t\thandleDeleteNote={handleDeleteNote}\n\t\t\t\t\t\tupdateMovingNote={updateMovingNote}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t))}\n\t\t\t{notes.length < 36 ? <AddNote handleAddNote={handleAddNote} /> : null}\n\t\t</Grid>\n\t);\n};\n\nexport default NotesList;\n"]},"metadata":{},"sourceType":"module"}